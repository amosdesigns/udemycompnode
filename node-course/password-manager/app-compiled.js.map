{"version":3,"sources":["app.js"],"names":[],"mappings":"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","file":"app-compiled.js","sourcesContent":["/**\n * Created by Jerome on 8/15/16.\n */\nconsole.log('*****************************************************');\nconsole.log('************  starting password manager  ************');\nconsole.log('*****************************************************');\nvar crypto = require('crypto-js');\nvar storage = require('node-persist');\n\nstorage.initSync();\nvar argv = require('yargs')\n    .command('create', 'creates the new account', function (yargs) {\n        \"use strict\";\n        yargs.options({\n            accountname: {\n                demand: true,\n                alias: 'n',\n                description: \"your account name goes here (twitter, facebook)\",\n                type: 'string'\n            },\n            username: {\n                demand: true,\n                alias: 'u',\n                description: \"your username or email goes here\",\n                type: 'string'\n            },\n            password: {\n                demand: true,\n                alias: 'p',\n                description: \"your password goes here\",\n                type: 'string'\n            },\n            masterPassword: {\n                demand: true,\n                alias: 'm',\n                description: \"your master password goes here\",\n                type: 'string'\n            }\n        })\n             .help(\"help\");\n    })\n    .command('get', 'Get an Exiting account', function (yargs) {\n        \"use strict\";\n        yargs.options({\n            accountname: {\n                demand: true,\n                alias: 'n',\n                description: \"your account name goes here (twitter, facebook)\",\n                type: 'string'\n            },\n            masterPassword: {\n                demand: true,\n                alias: 'm',\n                description: \"your master password goes here\",\n                type: 'string'\n            }\n\n        })\n             .help(\"help\");\n    })\n    .help(\"help\")\n    .argv;\n\nvar command = argv._[0];\n///////////////////////////////////\n///////////////////////////////////\n\n/**\n * getAccounts\n * @param masterPassword\n * @returns {Array}\n */\nfunction getAccounts(masterPassword) {\n    \"use strict\";\n    // use getItemSync to fetch accounts\n    var encryptedAccount = storage.getItemSync('accounts'),\n        accounts = [];\n    // decrypt\n    if (typeof encryptedAccount !== 'undefined') {\n        var bytes = crypto.AES.decrypt(encryptedAccount, masterPassword);\n        accounts = JSON.parse(bytes.toString(crypto.enc.Utf8));\n    }\n    // return accounts array\n    return accounts;\n}\n\n/**\n * saveAccounts\n * @param accounts\n * @param masterPassword\n * @returns {*}\n */\nfunction saveAccounts(accounts, masterPassword) {\n    \"use strict\";\n    var encryptedAccounts = crypto.AES.encrypt(JSON.stringify(accounts), masterPassword);\n    storage.setItemSync('accounts', encryptedAccounts.toString());\n    return accounts;\n}\n\n\n/**\n * createAccount\n * @param account\n * @param masterPassword\n * @returns {*}\n */\nfunction createAccount(account, masterPassword) {\n    \"use strict\";\n    var accounts = getAccounts(masterPassword);\n    accounts.push(account);\n    saveAccounts(accounts, masterPassword);\n\n    return account;\n}\n\n\n/**\n * getAccount\n * @param accountName\n * @param masterPassword\n * @returns {*}\n */\nfunction getAccount(accountName, masterPassword) {\n    \"use strict\";\n    var accounts = getAccounts(masterPassword),\n        matchAcc;\n    accounts.forEach(function (account) {\n        if (account.name === accountName) {\n            matchAcc = account;\n        }\n    });\n    return matchAcc;\n}\n\n\n////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////\nif (command === 'create') {\n    //try\n    try {\n        var createdAccount = createAccount({\n            name: argv.accountname,\n            username: argv.username,\n            password: argv.password\n        }, argv.masterPassword);\n        console.log('Account created!');\n        console.log(createdAccount);\n    } catch (e) {\n        console.log('Unable to create account.');\n    }\n} else if (command === 'get') {\n    // try\n    try {\n        var gotAccount = getAccount(argv.accountname, argv.masterPassword);\n        if (typeof gotAccount === \"undefined\") {\n            console.log('ERROR: Account name Not Found!');\n        } else {\n            console.log('Success: Account name found!');\n            console.log(gotAccount);\n        }\n    } catch (e) {\n        console.log('unable to get account.');\n    }\n}\n\n\n\n\n\n"]}